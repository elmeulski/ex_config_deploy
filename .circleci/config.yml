# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command: |
            aws cloud-formation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  # Exercise: Config and Deployment
  configure_infrastructure:
    docker: 
      - image: python:3.11-rc-alpine
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["3e:d7:af:bc:b2:df:01:64:d7:59:0b:90:fb:bd:c2:06"] 
      - run:
          name: Install Ansible
          command: apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i inventory.txt main-config-remote.yml

  # Exercise: Smoke test
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run: 
          name: smoke test
          command: |
            URL="https://blog.udacity.com"
            # Test if website exists"
            if curl -s --head ${URL}
            then 
              return 0
            else
              return 1
                fi

  create_infrastructure: 
    docker: 
      - image: amazon/aws-cli
    steps:
      - run: 
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file cloudformation-template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
      - run:
          command: return 1

  smoke_test_create_infra:
    docker: 
      - image: alpine:latest
    step: 
      - run: 
          name: A job to fail # Job that intentionally fails to simulate error
          command: return 1
      - destroy_environment
          
    
  
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  configure-infrastructure-workflow:
    jobs:
    #  - configure_infrastructure
    #  - smoke_test
      - create_infrastructure
      - smoke_test_create_infra

# VS Code Extension Version: 1.5.1